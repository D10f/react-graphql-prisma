type Post {
  id: ID!
  title: String!
  body: String!
  published: Boolean!
  likeCount: Int!
  likedBy: [User!]!
  author: User!
  comments: [Comment!]!
}

type Query {
  posts(query: String): [Post!]!
}

type Mutation {
  createPost(input: CreatePostInput!): Post!
  deletePost(id: ID!): Post!
  updatePost(id: ID!, input: UpdatePostInput!): Post!
  likeOrUnlikePost(postId: ID!, userId: ID!): Post!
}

type Subscription {
  post: PostSubscriptionPayload!
}

type PostSubscriptionPayload {
  mutation: MutationType!
  data: Post!
}

input CreatePostInput {
  title: String!
  body: String!
  published: Boolean
  authorId: ID!
}

input UpdatePostInput {
  title: String
  body: String
  published: Boolean,
  authorId: String
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}
